# Optimized CI for AI Solutions Lab
name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
        test-group: ['fast', 'full']
      fail-fast: false
    env:
      PIP_NO_CACHE_DIR: false  # Use cache for speed
      PIP_DISABLE_PIP_VERSION_CHECK: 1  # Skip version check
      PYTHONUNBUFFERED: 1  # Better logging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'  # Enable pip caching
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install minimal test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements-test.txt
        
    - name: Install ML dependencies (only for full test group)
      if: matrix.test-group == 'full'
      run: |
        # Try to install ML dependencies, but don't fail if they're slow
        timeout 120 pip install --no-cache-dir sentence-transformers faiss-cpu || echo "ML dependencies installation timed out, continuing with basic tests"
        
    - name: Run fast tests
      if: matrix.test-group == 'fast'
      run: |
        python -m pytest tests/test_task_a.py tests/test_task_b.py -v
        
    - name: Run full tests
      if: matrix.test-group == 'full'
      run: |
        python -m pytest tests/ -v
        
    - name: Test RAG demo
      run: |
        python src/ai_lab/simple_rag.py
        
    - name: Test FastAPI app loads
      run: |
        python -c "from src.ai_lab.app import app; print('âœ… FastAPI app loads successfully')"
